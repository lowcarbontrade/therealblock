syntax = "proto3";

package realblocknetwork.therealblock.therealblock;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "therealblock/therealblock/project.proto";

option go_package = "github.com/realblocknetwork/therealblock/x/therealblock/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateProject (MsgCreateProject) returns (MsgCreateProjectResponse);
  rpc InvestorBuyIn (MsgInvestorBuyIn) returns (MsgInvestorBuyInResponse);
  rpc ChangeState   (MsgChangeState  ) returns (MsgChangeStateResponse  );
  rpc MoneyIn       (MsgMoneyIn      ) returns (MsgMoneyInResponse      );
  rpc MoneyOut      (MsgMoneyOut     ) returns (MsgMoneyOutResponse     );
  rpc SponsorCancel (MsgSponsorCancel) returns (MsgSponsorCancelResponse);
  rpc SponsorAccept (MsgSponsorAccept) returns (MsgSponsorAcceptResponse);
}
message MsgCreateProject {
           string                   sponsor = 1;
           cosmos.base.v1beta1.Coin target  = 2 [(gogoproto.nullable) = false];
  repeated Stage                    stages  = 3;
}

message MsgCreateProjectResponse {
  uint64 id      = 1;
  string address = 2;
}

message MsgInvestorBuyIn {
  string                   investor  = 1;
  uint64                   projectId = 2;
  cosmos.base.v1beta1.Coin amount    = 3 [(gogoproto.nullable) = false];
}

message MsgInvestorBuyInResponse {
  string investorAddr = 1;
}

message MsgChangeState {
  string creator   = 1;
  uint64 projectId = 2;
  string newState  = 3;
}

message MsgChangeStateResponse {
  uint64 projectId = 1;
}

message MsgMoneyIn {
  string                   creator = 1;
  string                   addrTo  = 2;
  cosmos.base.v1beta1.Coin amount  = 3 [(gogoproto.nullable) = false];
}

message MsgMoneyInResponse {
  string addrTo = 1;
}

message MsgMoneyOut {
  string                   creator = 1;
  cosmos.base.v1beta1.Coin amount  = 2 [(gogoproto.nullable) = false];
}

message MsgMoneyOutResponse {
  string burnAddr = 1;
}

message MsgSponsorCancel {
  string creator   = 1;
  uint64 projectId = 2;
}

message MsgSponsorCancelResponse {
  uint64 projectId = 1;
}

message MsgSponsorAccept {
  string creator   = 1;
  uint64 projectId = 2;
}

message MsgSponsorAcceptResponse {
  uint64 projectId = 1;
}

